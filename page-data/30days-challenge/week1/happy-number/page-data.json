{"componentChunkName":"component---src-templates-blog-post-js","path":"/30days-challenge/week1/happy-number/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"markdownRemark":{"id":"2947894d-7efc-51b0-867c-12b632077cbd","html":"<h2>Happy Number (48mins)</h2>\n<h3>Question：</h3>\n<h5>Description:</h5>\n<ul>\n<li>Write an algorithm to determine if a number is \"happy\".</li>\n<li>A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.</li>\n</ul>\n<!-- ##### Note:\n* Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory? -->\n<h5>Examples:</h5>\n<pre><code>Input: 19\nOutput: true\nExplanation:\n1^2 + 9^2 = 82\n8^2 + 2^2 = 68\n6^2 + 8^2 = 100\n1^2 + 0^2 + 0^2 = 1\n</code></pre>\n<h3>Process:</h3>\n<ol>\n<li>保存计算过的部分，这个有助于减少循环的次数</li>\n<li>如何judge死循环呢？</li>\n<li><strong>这两个可能得放在一起考虑，保存的是一个数组，\n递归函数把计算过程也带上去了，如果数组中出现已经算过了，那么就证明有循环了，判定false</strong></li>\n</ol>\n<h3>Answer:</h3>\n<h3>Others Answer:</h3>","timeToRead":1,"frontmatter":{"title":""},"fields":{"slug":"/30days-challenge/week1/happy-number/"}}},"pageContext":{"slug":"/30days-challenge/week1/happy-number/","previous":"preserved","next":"preserved"}}}