{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/30days-challenge/week2/product-except-self/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"markdownRemark":{"id":"8ad51212-b106-5753-b158-0eb77785541f","html":"<h2>productExceptSelf (20 mins)</h2>\n<h3>Question：</h3>\n<h5>Description:</h5>\n<ul>\n<li>Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].</li>\n</ul>\n<h5>Constraint:</h5>\n<ul>\n<li>It's guaranteed that the product of the elements of any prefix or suffix of the array (including the whole array) fits in a 32 bit integer.</li>\n</ul>\n<h5>Note:</h5>\n<ul>\n<li>Please solve it without division and in O(n).</li>\n</ul>\n<h5>Follow up:</h5>\n<ul>\n<li>Could you solve it with constant space complexity? (The output array does not count as extra space for the purpose of space complexity analysis.)</li>\n</ul>\n<h5>Examples:</h5>\n<pre><code>Input:  [1,2,3,4]\nOutput: [24,12,8,6]\n</code></pre>\n<h3>Process:</h3>\n<ul>\n<li>[1] => [1]</li>\n<li>[1,2] => [2,1]</li>\n<li>[1,2,3] => [2<em>3,1</em>3,1*2]</li>\n<li>[1,2,3,4] => [2<em>3</em>4,1<em>3</em>4,1<em>2</em>4,1<em>2</em>3]</li>\n<li>写着写着 发现不是O(n)...</li>\n<li>虽然通过了，有必要在研究下 的</li>\n</ul>\n<h3>Answer:</h3>\n<h3>Others Answer:</h3>","timeToRead":1,"frontmatter":{"title":"productExceptSelf"},"fields":{"slug":"/30days-challenge/week2/product-except-self/"}}},"pageContext":{"slug":"/30days-challenge/week2/product-except-self/","previous":"preserved","next":"preserved"}}}