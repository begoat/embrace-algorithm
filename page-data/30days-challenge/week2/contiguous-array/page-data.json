{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/30days-challenge/week2/contiguous-array/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"markdownRemark":{"id":"eaa450c6-0a9d-5e74-9b35-1d5cd67546f6","html":"<h2>Contiguous Array (50 mins)</h2>\n<h3>Question：</h3>\n<h5>Description:</h5>\n<ul>\n<li>Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.</li>\n</ul>\n<h5>Note:</h5>\n<ul>\n<li>The length of the given binary array will not exceed 50,000.</li>\n</ul>\n<h5>Examples:</h5>\n<pre><code>Input: [0,1]\nOutput: 2\nExplanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.\n\nInput: [0,1,0]\nOutput: 2\nExplanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n</code></pre>\n<h3>Process:</h3>\n<ul>\n<li>首先 第一次题目理解错了，以为 连续的01/10的数量</li>\n<li>其实 应该是 00001111，也算</li>\n<li>\n<p>能不能遍历数组，记录一遍每个节点的信息</p>\n<ul>\n<li>[0, 1, 0, 0, 0, 1, 1]</li>\n<li>=></li>\n<li>0: {0: 1, 1: 0}</li>\n<li>1: {0: 1, 1: 1}</li>\n<li>0: {0: 2, 1: 1}</li>\n<li>0: {0: 3, 1: 1}</li>\n<li>0: {0: 4, 1: 1}</li>\n<li>1: {0: 4, 1: 2}</li>\n<li>1: {0: 4, 1: 3}</li>\n</ul>\n</li>\n<li>感觉上面的解法挺有意思，但是怎么证明他是对的呢？怎么证明连续的一组数据就是正确的呢</li>\n<li>[0,1,1,0,1,1,1,0] 这个数组 证明，我的方法是错的， 没有连续。</li>\n<li>确实哦，我这个没有判断连续，那么如何包含这种情况呢</li>\n<li>我的结论是这样基本是错的，又不是让你找从数组的一开始，有多少个同样的0、1，没必要保留从0开始的有多少个0，1</li>\n<li><strong>动态规划，len每增加一，当前最优解，要么是不用新增的值，要么是使用新增的值</strong></li>\n<li>没用动态规划想出来，大佬也没有嘿嘿嘿</li>\n<li>我想到 每个节点 保存 已经有的0和1的值了，</li>\n<li>但是 最后判断结果的一步错了，应该是 0和1个数相等的点是平衡点，两个平衡点之间0，1的个数一定是相等的，所以返回的就是最大的两个平衡点的距离</li>\n<li>平衡点 不一定是 0、1个数相等的点，</li>\n<li>而是 每个节点累计 0，1计算下来，画出这样一条线，y值相等的点之间的最远距离就是结果</li>\n<li>开心，豁然开朗</li>\n</ul>\n<h3>Answer:</h3>\n<h3>Others Answer:</h3>","timeToRead":2,"frontmatter":{"title":" Contiguous Array"},"fields":{"slug":"/30days-challenge/week2/contiguous-array/"}}},"pageContext":{"slug":"/30days-challenge/week2/contiguous-array/","previous":"preserved","next":"preserved"}}}