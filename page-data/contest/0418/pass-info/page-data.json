{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/contest/0418/pass-info/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"markdownRemark":{"id":"c5c221e3-1fa3-58b5-93f2-71edf95fe913","html":"<h2>numWays ( mins)</h2>\n<h3>Question：</h3>\n<h5>Description:</h5>\n<ul>\n<li>小朋友 A 在和 ta 的小伙伴们玩传信息游戏，游戏规则如下：</li>\n<li>有 n 名玩家，所有玩家编号分别为 0 ～ n-1，其中小朋友 A 的编号为 0</li>\n<li>每个玩家都有固定的若干个可传信息的其他玩家（也可能没有）。传信息的关系是单向的（比如 A 可以向 B 传信息，但 B 不能向 A 传信息）。</li>\n<li>每轮信息必须需要传递给另一个人，且信息可重复经过同一个人</li>\n<li>给定总玩家数 n，以及按 [玩家编号,对应可传递玩家编号] 关系组成的二维数组 relation。返回信息从小 A (编号 0 ) 经过 k 轮传递到编号为 n-1 的小伙伴处的方案数；若不能到达，返回 0。</li>\n</ul>\n<h5>Note:</h5>\n<ul>\n<li>2 &#x3C;= n &#x3C;= 10</li>\n<li>1 &#x3C;= k &#x3C;= 5</li>\n<li>1 &#x3C;= relation.length &#x3C;= 90, 且 relation[i].length == 2</li>\n<li>0 &#x3C;= relation[i][0],relation[i][1] &#x3C; n 且 relation[i][0] != relation[i][1]</li>\n</ul>\n<h5>Examples:</h5>\n<pre><code>输入：n = 5, relation = [[0,2],[2,1],[3,4],[2,3],[1,4],[2,0],[0,4]], k = 3\n\n输出：3\n\n解释：信息从小 A 编号 0 处开始，经 3 轮传递，到达编号 4。共有 3 种方案，分别是 0->2->0->4， 0->2->1->4， 0->2->3->4。\n\n输入：n = 3, relation = [[0,2],[2,1]], k = 2\n\n输出：0\n\n解释：信息不能从小 A 处经过 2 轮传递到编号 2\n</code></pre>\n<h3>Process:</h3>\n<ul>\n<li>这是 一个图，或者说 是一个状态机，怎么处理</li>\n<li>这又是一个 可以拆分的子问题</li>\n</ul>\n<h3>Answer:</h3>\n<h3>Others Answer:</h3>","timeToRead":1,"frontmatter":{"title":"numWays"},"fields":{"slug":"/contest/0418/pass-info/"}}},"pageContext":{"slug":"/contest/0418/pass-info/","previous":"preserved","next":"preserved"}}}