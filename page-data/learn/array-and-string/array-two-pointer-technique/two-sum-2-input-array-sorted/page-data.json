{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/learn/array-and-string/array-two-pointer-technique/two-sum-2-input-array-sorted/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"markdownRemark":{"id":"bfef622b-fdb9-5b93-ace2-0e0567be3d89","html":"<h2>twoSum (20 mins)</h2>\n<h3>Questionï¼š</h3>\n<h5>Description:</h5>\n<ul>\n<li>Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.</li>\n<li>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.</li>\n</ul>\n<h5>Note:</h5>\n<ul>\n<li>Your returned answers (both index1 and index2) are not zero-based.</li>\n<li>You may assume that each input would have exactly one solution and you may not use the same element twice.</li>\n</ul>\n<h5>Examples:</h5>\n<pre><code>Input: numbers = [2,7,11,15], target = 9\nOutput: [1,2]\nExplanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.\n</code></pre>\n<h3>Process:</h3>\n<ul>\n<li>there is no assumption that the number is position so that we can filter some elements larger than target</li>\n<li>keep in mind that we should use two pointer technique</li>\n<li>\n<p>In the out loop, we can fix one number and calc the rest number by substract from target.</p>\n<ul>\n<li>use another pointer to check</li>\n</ul>\n</li>\n<li>complexity is O(n^2) i think</li>\n</ul>\n<h3>Answer:</h3>\n<h3>Others Answer:</h3>","timeToRead":1,"frontmatter":{"title":"Two Sum II - Input array is sorted"},"fields":{"slug":"/learn/array-and-string/array-two-pointer-technique/two-sum-2-input-array-sorted/"}}},"pageContext":{"slug":"/learn/array-and-string/array-two-pointer-technique/two-sum-2-input-array-sorted/","previous":"preserved","next":"preserved"}}}