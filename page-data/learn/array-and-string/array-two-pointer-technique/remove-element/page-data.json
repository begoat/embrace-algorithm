{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/learn/array-and-string/array-two-pointer-technique/remove-element/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"markdownRemark":{"id":"71c08203-9adb-5586-89a1-08bafc0e7463","html":"<h2>Remove Element ( mins)</h2>\n<h3>Question：</h3>\n<h5>Description:</h5>\n<ul>\n<li>Given an array nums and a value val, remove all instances of that value <strong>in-place</strong> and return the new length.</li>\n<li>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</li>\n<li>The order of elements can be changed. It doesn't matter what you leave beyond the new length.</li>\n</ul>\n<h5>Clarification:</h5>\n<ul>\n<li>Confused why the returned value is an integer but your answer is an array?</li>\n<li>Note that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.</li>\n<li>\n<p>Internally you can think of this:</p>\n<pre><code>// nums is passed in by reference. (i.e., without making a copy)\nint len = removeElement(nums, val);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i &#x3C; len; i++) {\n  print(nums[i]);\n}\n</code></pre>\n</li>\n</ul>\n<h5>Examples:</h5>\n<pre><code>Given nums = [3,2,2,3], val = 3,\n\n// Your function should return length = 2, with the first two elements of nums being 2.\n\n// It doesn't matter what you leave beyond the returned length.\n\nGiven nums = [0,1,2,2,3,0,4,2], val = 2,\n\nYour function should return length = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4.\n\nNote that the order of those five elements can be arbitrary.\n\nIt doesn't matter what values are set beyond the returned length.\n</code></pre>\n<h3>Process:</h3>\n<ul>\n<li>So stupid question description...</li>\n<li>just modify the input array and return the length</li>\n<li>\n<p>use two pointer</p>\n<ul>\n<li>one for iteration</li>\n<li>one be placed in the end (always keep elements after second pointer is the target val)</li>\n<li>if current iteration value if the target value, just swap it with second pointer</li>\n</ul>\n</li>\n<li>\n<p>实际做的时候还是遇到了一些问题了，这道题一共卡了80分钟。。。本来状态就不好，\n其中有一个判断条件是 右边指针--，需要一个while循环去减减，这样才服务和哦我们的想法</p>\n<ul>\n<li>右边的指针代表：下一个要被替换的元素，在他右边的都是 === val的</li>\n</ul>\n</li>\n</ul>\n<h3>Answer:</h3>\n<h3>Others Answer:</h3>","timeToRead":2,"frontmatter":{"title":"Remove Element"},"fields":{"slug":"/learn/array-and-string/array-two-pointer-technique/remove-element/"}}},"pageContext":{"slug":"/learn/array-and-string/array-two-pointer-technique/remove-element/","previous":"preserved","next":"preserved"}}}