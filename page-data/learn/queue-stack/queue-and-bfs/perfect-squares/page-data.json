{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/learn/queue-stack/queue-and-bfs/perfect-squares/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"markdownRemark":{"id":"eefa98e2-f619-5138-906d-7d47b1f90b43","html":"<h2>Perfect Squares</h2>\n<h3>Question：</h3>\n<p>Given a positive integer <i>n</i>, find the least number of perfect square numbers (for example, <code>1, 4, 9, 16, ...</code>) which sum to <i>n</i>.</p>\n<p><b>Example 1:</b></p>\n<pre>\n<b>Input:</b> <i>n</i> = <code>12</code>\n<b>Output:</b> 3\n<strong>Explanation: </strong><code>12 = 4 + 4 + 4.</code></pre>\n<p><b>Example 2:</b></p>\n<pre>\n<b>Input:</b> <i>n</i> = <code>13</code>\n<b>Output:</b> 2\n<strong>Explanation: </strong><code>13 = 4 + 9.</code></pre>\n<h3>Process:</h3>\n<ul>\n<li>有点棘手，一时间不知道怎么处理</li>\n<li>首先肯定都是可以的，因为 大不了都是1，返回就是这个数本身嘛</li>\n<li>然后有点像动态规划的问题？因为依赖于之前的</li>\n<li>就是一个划分成子问题，分而治之去求解的过程，同时记录已经求过的值避免重复计算</li>\n<li>不知道为什么会出现在队列里面</li>\n</ul>\n<h3>Answer:</h3>\n<h3>Others Answer:</h3>","timeToRead":1,"frontmatter":{"title":"Perfect Squares"},"fields":{"slug":"/learn/queue-stack/queue-and-bfs/perfect-squares/"}}},"pageContext":{"slug":"/learn/queue-stack/queue-and-bfs/perfect-squares/","previous":"preserved","next":"preserved"}}}