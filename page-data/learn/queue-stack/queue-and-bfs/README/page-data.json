{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/learn/queue-stack/queue-and-bfs/README/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"markdownRemark":{"id":"0fa70664-0d75-59d6-a6a9-826712c8e501","html":"<h3>Queue and BFS</h3>\n<p>One common application of Breadth-first Search (BFS) is to find the shortest path from the root node to the target node.</p>\n<blockquote>\n<p>In the first round, we process the root node. In the second round, we process the nodes next to the root node; in the third round, we process the nodes which are two steps from the root node; so on and so forth.</p>\n</blockquote>\n<blockquote>\n<p>Similar to tree's level-order traversal, the nodes closer to the root node will be traversed earlier.</p>\n</blockquote>\n<blockquote>\n<p>If a node X is added to the queue in the kth round, the length of the shortest path between the root node and X is exactly k. That is to say, you are already in the shortest path the first time you find the target node.</p>\n</blockquote>","timeToRead":1,"frontmatter":{"title":""},"fields":{"slug":"/learn/queue-stack/queue-and-bfs/README/"}}},"pageContext":{"slug":"/learn/queue-stack/queue-and-bfs/README/","previous":"preserved","next":"preserved"}}}